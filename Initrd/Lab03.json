{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
      "_generator": {
        "name": "bicep",
        "version": "0.4.1.14562",
        "templateHash": "16607361201936431976"
      }
    },
    "parameters": {
      "vmName": {
        "type": "string",
        "defaultValue": "lab03initrd",
        "metadata": {
          "description": "The name of you Virtual Machine."
        }
      },
      "adminUsername": {
        "type": "string",
        "defaultValue": "azureuser",
        "metadata": {
          "description": "Username for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "secureString",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "dnsLabelPrefix": {
        "type": "string",
        "defaultValue": "[concat(parameters('vmName'), uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "The size of the VM"
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "vNet3",
        "metadata": {
          "description": "Name of the VNET"
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "initlab3",
        "metadata": {
          "description": "Name of the subnet in the virtual network"
        }
      },
      "networkSecurityGroupName": {
        "type": "string",
        "defaultValue": "generic_ssh",
        "metadata": {
          "description": "Name of the Network Security Group"
        }
      },
      "customData": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "base64 content for cloud-init custom data"
        }
      },
      "storageAccounts_aztrial_name": {
        "defaultValue": "[concat('stor', uniqueString(resourceGroup().id))]",
        "type": "String"
      }
    },
    "functions": [],
    "variables": {
      "publicIPAddressName": "[format('{0}PublicIP', parameters('vmName'))]",
      "networkInterfaceName": "[format('{0}NetInt', parameters('vmName'))]",
      "osDiskType": "StandardSSD_LRS",
      "subnetAddressPrefix": "10.1.0.0/24",
      "addressPrefix": "10.1.0.0/16",
      "linuxConfiguration": {
        "disablePasswordAuthentication": false
      }
    },
    "resources": [
      {
        "type": "Microsoft.Network/networkInterfaces",
        "apiVersion": "2020-06-01",
        "name": "[variables('networkInterfaceName')]",
        "location": "[parameters('location')]",
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "subnet": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                },
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                }
              }
            }
          ]      },
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
        ]
      },
      {
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-06-01",
        "name": "[parameters('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "inbound_ssh",
              "properties": {
                "access": "Allow",
                "description": "Inbound SSH access to port 22.",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "22",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 100,
                "Protocol": "TCP",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-104",
              "properties": {
                "access": "Deny",
                "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": null,
                "destinationPortRanges": [
                  "13",
                  "17",
                  "19",
                  "22",
                  "23",
                  "53",
                  "69",
                  "111",
                  "119",
                  "123",
                  "135",
                  "137",
                  "138",
                  "139",
                  "161",
                  "162",
                  "389",
                  "445",
                  "512",
                  "514",
                  "593",
                  "636",
                  "873",
                  "1433",
                  "1434",
                  "1900",
                  "2049",
                  "2301",
                  "2381",
                  "3268",
                  "3306",
                  "3389",
                  "4333",
                  "5353",
                  "5432",
                  "5800",
                  "5900",
                  "5985",
                  "5986",
                  "6379",
                  "7000",
                  "7001",
                  "7199",
                  "9042",
                  "9160",
                  "9300",
                  "11211",
                  "16379",
                  "26379",
                  "27017"
                ],
                "direction": "Inbound",
                "priority": 204,
                "protocol": "*",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-103",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 103,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "CorpNetSaw",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-101",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 101,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-102",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 102,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "CorpNetPublic",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "inbound_web",
              "properties": {
                "access": "Allow",
                "description": "Inbound HTTP and HTTPS from home.",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": null,
                "destinationPortRanges": [
                  "8080",
                  "8443"
                ],
                "direction": "Inbound",
                "priority": 104,
                "protocol": "TCP",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks",
        "apiVersion": "2020-06-01",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          }
        }
      },
      {
        "type": "Microsoft.Network/virtualNetworks/subnets",
        "apiVersion": "2020-06-01",
        "name": "[format('{0}/{1}', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "properties": {
          "addressPrefix": "[variables('subnetAddressPrefix')]",
          "privateEndpointNetworkPolicies": "Enabled",
          "privateLinkServiceNetworkPolicies": "Enabled",
          "networkSecurityGroup": {
            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        ]
      },
      {
        "type": "Microsoft.Network/publicIPAddresses",
        "apiVersion": "2020-06-01",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Basic"
        },
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "publicIPAddressVersion": "IPv4",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          },
          "idleTimeoutInMinutes": 4
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2020-06-01",
        "name": "[parameters('vmName')]",
        "location": "[parameters('location')]",
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "storageProfile": {
            "osDisk": {
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('osDiskType')]"
              }
            },
            "imageReference": {
              "publisher": "RedHat",
              "offer": "RHEL",
              "sku": "9_2",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              }
            ]
          },
          "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "[parameters('customData')]"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccounts_aztrial_name'))).primaryEndpoints.blob]"
            }
          }
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
        ]
      },
      {
        "name": "[parameters('storageAccounts_aztrial_name')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "tags": {
          "displayName": "[parameters('storageAccounts_aztrial_name')]"
        },
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        }
      },
      {
         "name": "[concat(parameters('vmName'), '/runLinuxScriptinCSE')]",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2019-03-01",
          "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
          ],
          "properties": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.1",
          "autoUpgradeMinorVersion": true,
          "protectedSettings": {
             "script": "IyEvYmluL2Jhc2gKCiNDdXN0b20gc2NyaXB0IHRvIGRhbWFnZSBMYWIyIGZvciBJbml0cmQgbW9kdWxlLgoKI0NvbW1lbnRpbmcgb3V0IGFkZF9kcml2ZXJzKz0iaHZfdm1idXNodl9uZXR2c2Nodl9zdG9ydnNjIiBpbiAvZXRjL2RyYWN1dC5jb25mCiNzZWQgLWkgJ3MvYWRkX2RyaXZlcnMrPSJodl92bWJ1cyBodl9uZXR2c2MgaHZfc3RvcnZzYyIvXCNhZGRfZHJpdmVycys9Imh2X3ZtYnVzIGh2X25ldHZzYyBodl9zdG9ydnNjIi8nIC9ldGMvZHJhY3V0LmNvbmYKCiNHZXQgdGhlIGh2X3N0b3J2c2MgbW9kdWxlIG5vdCBiZWNvbWluZyBwYXJ0IG9mIHRoZSBpbml0cmQgZmlsZS4KZWNobyAib21pdF9kcml2ZXJzKz1cIiBodl92bWJ1cyBodl9uZXR2c2MgaHZfc3RvcnZzYyBcIiIgPj4gL2V0Yy9kcmFjdXQuY29uZgoKI1JlY3JlYXRlIHRoZSBpbml0cmQKa2VybmVsPWB1bmFtZSAtcmAKZHJhY3V0IC1mIC9ib290L2luaXRyYW1mcy0ka2VybmVsLmltZyAka2VybmVsCgojUmVib290IHRoZSBWTQpzaHV0ZG93biAtciArMQo="
             }
          }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "hostname": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
      },
      "sshCommand": {
        "type": "string",
        "value": "[format('ssh {0}@{1} -p 2222', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn)]"
      }
    }
  }